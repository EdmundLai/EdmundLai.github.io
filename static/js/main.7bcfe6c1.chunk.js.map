{"version":3,"sources":["assets/edmund1.jpg","components/Bio/Bio.js","components/ProjectCard/ProjectCard.js","components/Portfolio/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BioPicture","require","Bio","props","state","windowWidth","window","innerWidth","handleWindowResize","bind","addEventListener","this","removeEventListener","setState","isMobile","isTablet","containerClass","className","React","Component","BioImg","src","alt","BioText","ProjectCard","tabletClass","title","href","projLink","imgsrc","description","Portfolio","desc1","desc2","App","to","path","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kKAAAA,EAAOC,QAAU,IAA0B,qC,+MCGrCC,G,MAAaC,EAAQ,KAErBC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,YAAaC,OAAOC,YAGtB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAPT,E,iFAWjBH,OAAOI,iBAAiB,SAAUC,KAAKH,sB,6CAIvCF,OAAOM,oBAAoB,SAAUD,KAAKH,sB,2CAI1CG,KAAKE,SAAS,CACZR,YAAaC,OAAOC,e,+BAKtB,IAAIO,EAAWH,KAAKP,MAAMC,YAAc,IACpCU,EAAWJ,KAAKP,MAAMC,YAAc,IAEpCW,EAAiB,eAErB,OAAGF,EAEC,yBAAKG,UAAU,OACb,wCACA,yBAAKA,UAAU,sBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SAKHF,IACDC,EAAiB,sBAGjB,yBAAKC,UAAU,OACb,wCACA,yBAAKA,UAAWD,GACd,kBAAC,EAAD,MACA,kBAAC,EAAD,a,GAlDME,IAAMC,WA0DlBC,EAAS,kBACZ,yBAAKH,UAAU,UACd,yBAAKI,IAAKrB,EAAYsB,IAAI,iBAIxBC,EAAU,kBACb,yBAAKN,UAAU,WACd,8CACA,wGAGA,0HAGA,4LAKWf,ICVAsB,G,kBArEb,WAAYrB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,YAAaC,OAAOC,YAGtB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAPT,E,iFAWjBH,OAAOI,iBAAiB,SAAUC,KAAKH,sB,6CAIvCF,OAAOM,oBAAoB,SAAUD,KAAKH,sB,2CAI1CG,KAAKE,SAAS,CACZR,YAAaC,OAAOC,e,+BAMtB,IAAIO,EAAWH,KAAKP,MAAMC,YAAc,IACpCU,EAAWJ,KAAKP,MAAMC,YAAc,KAEpCoB,EAAc,GAElB,OAAGX,EAEC,yBAAKG,UAAU,qBACb,4BAAKN,KAAKR,MAAMuB,OAChB,yBAAKT,UAAU,gBACb,uBAAGU,KAAMhB,KAAKR,MAAMyB,UAClB,yBAAKP,IAAKV,KAAKR,MAAM0B,OAAQP,IAAKX,KAAKR,MAAMuB,UAGjD,yBAAKT,UAAU,mBACZN,KAAKR,MAAM2B,eAKff,IACDU,EAAc,cAId,yBAAKR,UAAS,sBAAiBQ,IAC7B,yBAAKR,UAAU,gBACb,uBAAGU,KAAMhB,KAAKR,MAAMyB,UAClB,yBAAKP,IAAKV,KAAKR,MAAM0B,OAAQP,IAAKX,KAAKR,MAAMuB,UAGjD,yBAAKT,UAAU,sBACb,4BAAKN,KAAKR,MAAMuB,OAChB,yBAAKT,UAAU,mBACZN,KAAKR,MAAM2B,oB,GA7DAZ,IAAMC,YCqCjBY,G,uLAlCX,IAAIC,EACJ,oCACE,8JACA,sJACA,kEAEEC,EACJ,oCACE,iOACA,qJACA,mEAEF,OACE,yBAAKhB,UAAU,aACb,yCAGA,kBAAC,EAAD,CACEY,OAAO,iBACPH,MAAM,8BACNI,YAAaE,EACbJ,SAAS,8CAEX,kBAAC,EAAD,CACEC,OAAO,qBACPH,MAAM,iCACNI,YAAaG,EACbL,SAAS,kE,GA7BKV,IAAMC,Y,MCsCfe,MApCf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKjB,UAAU,OACb,4BAAQA,UAAU,cAChB,0CACA,6BACE,4BACE,4BACA,kBAAC,IAAD,CAAMkB,GAAG,KAAT,SAEA,4BACE,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAKR,yBAAKlB,UAAU,YACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmB,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,KAChB,kBAAC,EAAD,SAKN,yBAAKnB,UAAU,cAAf,6BCtBYqB,QACW,cAA7BhC,OAAOiC,SAASC,UAEe,UAA7BlC,OAAOiC,SAASC,UAEhBlC,OAAOiC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7bcfe6c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edmund1.05a6f993.jpg\";","import React from 'react';\r\nimport './Bio.css';\r\n\r\nconst BioPicture = require('../../assets/edmund1.jpg');\r\n\r\nclass Bio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      windowWidth: window.innerWidth\r\n    }\r\n\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.setState({\r\n      windowWidth: window.innerWidth\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let isMobile = this.state.windowWidth < 640 ? true : false;\r\n    let isTablet = this.state.windowWidth < 950 ? true : false;\r\n\r\n    let containerClass = \"BioContainer\";\r\n\r\n    if(isMobile) {\r\n      return(\r\n        <div className=\"Bio\">\r\n          <h2>About Me</h2>\r\n          <div className=\"BioContainerMobile\">\r\n            <BioImg />\r\n            <BioText />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      if(isTablet) {\r\n        containerClass = \"BioContainerTablet\";\r\n      }\r\n      return(\r\n        <div className=\"Bio\">\r\n          <h2>About Me</h2>\r\n          <div className={containerClass}>\r\n            <BioText />\r\n            <BioImg />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst BioImg = () =>\r\n  (<div className=\"BioImg\">\r\n    <img src={BioPicture} alt=\"Edmund Lai\"/>\r\n  </div>);\r\n\r\n\r\nconst BioText = () =>\r\n  (<div className=\"BioText\">\r\n    <p>Hi, I'm Edmund!</p>\r\n    <p>\r\n      I'm passionate about creating code that helps make people's lives easier.\r\n    </p>\r\n    <p>\r\n      I'm a web developer, musician, and always curious to learn more about the world we live in.\r\n    </p>\r\n    <p>\r\n      I'm also interested in game development and games in general, so I enjoy making projects that can help people improve their gameplay or tilt a little less.\r\n    </p>\r\n  </div>);\r\n\r\nexport default Bio;","import React from 'react';\r\nimport './ProjectCard.css';\r\n\r\nclass ProjectCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      windowWidth: window.innerWidth\r\n    }\r\n\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.setState({\r\n      windowWidth: window.innerWidth\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let isMobile = this.state.windowWidth < 1000 ? true : false;\r\n    let isTablet = this.state.windowWidth < 1200 ? true : false;\r\n\r\n    let tabletClass = \"\";\r\n\r\n    if(isMobile) {\r\n      return(\r\n        <div className=\"ProjectCardMobile\">\r\n          <h3>{this.props.title}</h3>\r\n          <div className=\"ProjectImage\">\r\n            <a href={this.props.projLink}>\r\n              <img src={this.props.imgsrc} alt={this.props.title}/>\r\n            </a>\r\n          </div>\r\n          <div className=\"DescriptionBody\">\r\n            {this.props.description}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      if(isTablet) {\r\n        tabletClass = \"CardTablet\";\r\n      }\r\n\r\n      return(\r\n        <div className={`ProjectCard ${tabletClass}`}>\r\n          <div className=\"ProjectImage\">\r\n            <a href={this.props.projLink}>\r\n              <img src={this.props.imgsrc} alt={this.props.title}/>\r\n            </a>\r\n          </div>\r\n          <div className=\"ProjectDescription\">\r\n            <h3>{this.props.title}</h3>\r\n            <div className=\"DescriptionBody\">\r\n              {this.props.description}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProjectCard;","import React from 'react';\r\nimport ProjectCard from '../ProjectCard/ProjectCard';\r\nimport './Portfolio.css';\r\n\r\nclass Portfolio extends React.Component {\r\n  render() {\r\n    let desc1 =\r\n    <>\r\n      <p>Website dedicated to providing useful information for each game to League of Legends players looking to analyze their gameplay.</p>\r\n      <p>Provides important stats such as Kills, Deaths, Assists, and gold and experience earned to analyze overall performance.</p>\r\n      <p>Developed using React and Node.JS.</p>\r\n    </>;\r\n    let desc2 = \r\n    <>\r\n      <p>Application developed to monitor latency to League of Legends servers outside of game, so that players can check if their internet connection is stable and won't impair their ingame performance.</p>\r\n      <p>Uses built in TCP/IP ping command in operating system to connect to the server IP address to check connection quality.</p>\r\n      <p>Developed using Python and Tkinter.</p>\r\n    </>\r\n    return(\r\n      <div className=\"Portfolio\">\r\n        <h2>\r\n          Portfolio\r\n        </h2>\r\n        <ProjectCard \r\n          imgsrc=\"/lolstats2.png\"\r\n          title=\"League of Legends Stats App\"\r\n          description={desc1}\r\n          projLink=\"https://lol-stats-analysis.herokuapp.com/\"\r\n        />\r\n        <ProjectCard\r\n          imgsrc=\"/ping_app_demo.png\"\r\n          title=\"League of Legends Ping Checker\"\r\n          description={desc2}\r\n          projLink=\"https://github.com/EdmundLai/League-of-Legends-Ping-App/\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport { HashRouter as Router, Link, Switch, Route } from 'react-router-dom';\r\nimport Bio from './components/Bio/Bio';\r\nimport Portfolio from './components/Portfolio/Portfolio';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Edmund Lai</h1>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n              <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/portfolio\">Portfolio</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <div className=\"App-body\">\r\n          <Switch>\r\n            <Route path=\"/portfolio\">\r\n              <Portfolio />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Bio />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n\r\n        <div className=\"App-footer\">\r\n          &#x24B8; 2019 Edmund Lai\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}