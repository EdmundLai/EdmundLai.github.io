{"version":3,"sources":["assets/edmund1.jpg","components/Bio/Bio.js","components/ProjectCard/ProjectCard.js","assets/lolstatsnew.PNG","assets/ping_app_demo.PNG","components/Portfolio/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["Bio","props","state","windowWidth","window","innerWidth","handleWindowResize","bind","addEventListener","this","removeEventListener","setState","isMobile","isTablet","containerClass","className","React","Component","BioImg","src","BioPicture","alt","BioText","ProjectCard","tabletClass","title","href","projLink","imgsrc","description","Portfolio","desc1","desc2","LOLStatsPicture","PingDemoPicture","App","to","path","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.859d0ba3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/edmund1.587d9f8d.jpg\";","import React from \"react\";\r\nimport \"./Bio.css\";\r\n\r\nimport BioPicture from \"../../assets/edmund1.jpg\";\r\n\r\nclass Bio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      windowWidth: window.innerWidth,\r\n    };\r\n\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.setState({\r\n      windowWidth: window.innerWidth,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let isMobile = this.state.windowWidth < 640 ? true : false;\r\n    let isTablet = this.state.windowWidth < 950 ? true : false;\r\n\r\n    let containerClass = \"BioContainer\";\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <div className=\"Bio\">\r\n          <h2>About Me</h2>\r\n          <div className=\"BioContainerMobile\">\r\n            <BioImg />\r\n            <BioText />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (isTablet) {\r\n        containerClass = \"BioContainerTablet\";\r\n      }\r\n      return (\r\n        <div className=\"Bio\">\r\n          <h2>About Me</h2>\r\n          <div className={containerClass}>\r\n            <BioText />\r\n            <BioImg />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst BioImg = () => (\r\n  <div className=\"BioImg\">\r\n    <img src={BioPicture} alt=\"Edmund Lai\" />\r\n  </div>\r\n);\r\n\r\nconst BioText = () => (\r\n  <div className=\"BioText\">\r\n    <p>Hi, I'm Edmund!</p>\r\n    <p>\r\n      I'm passionate about creating code that helps make people's lives easier.\r\n    </p>\r\n    <p>\r\n      I'm a web developer, musician, and always curious to learn more about the\r\n      world we live in.\r\n    </p>\r\n    <p>\r\n      I'm also interested in game development and games in general, so I enjoy\r\n      making projects that can help people improve their gameplay or tilt a\r\n      little less.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Bio;\r\n","import React from \"react\";\r\nimport \"./ProjectCard.css\";\r\n\r\nclass ProjectCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      windowWidth: window.innerWidth,\r\n    };\r\n\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.setState({\r\n      windowWidth: window.innerWidth,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let isMobile = this.state.windowWidth < 1000 ? true : false;\r\n    let isTablet = this.state.windowWidth < 1200 ? true : false;\r\n\r\n    let tabletClass = \"\";\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <div className=\"ProjectCardMobile\">\r\n          <h3>{this.props.title}</h3>\r\n          <div className=\"ProjectImage\">\r\n            <a href={this.props.projLink}>\r\n              <img src={this.props.imgsrc} alt={this.props.title} />\r\n            </a>\r\n          </div>\r\n          <div className=\"DescriptionBody\">{this.props.description}</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (isTablet) {\r\n        tabletClass = \"CardTablet\";\r\n      }\r\n\r\n      return (\r\n        <div className={`ProjectCard ${tabletClass}`}>\r\n          <div className=\"ProjectImage\">\r\n            <a href={this.props.projLink}>\r\n              <img src={this.props.imgsrc} alt={this.props.title} />\r\n            </a>\r\n          </div>\r\n          <div className=\"ProjectDescription\">\r\n            <h3>{this.props.title}</h3>\r\n            <div className=\"DescriptionBody\">{this.props.description}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ProjectCard;\r\n","export default __webpack_public_path__ + \"static/media/lolstatsnew.67558990.PNG\";","export default __webpack_public_path__ + \"static/media/ping_app_demo.5067135c.PNG\";","import React from \"react\";\r\nimport ProjectCard from \"../ProjectCard/ProjectCard\";\r\nimport \"./Portfolio.css\";\r\n\r\nimport LOLStatsPicture from \"../../assets/lolstatsnew.PNG\";\r\nimport PingDemoPicture from \"../../assets/ping_app_demo.PNG\";\r\n\r\nclass Portfolio extends React.Component {\r\n  render() {\r\n    let desc1 = (\r\n      <>\r\n        <p>\r\n          Website dedicated to providing useful information for each game to\r\n          League of Legends players looking to analyze their gameplay.\r\n        </p>\r\n        <p>\r\n          Provides important stats such as Kills, Deaths, Assists, and gold and\r\n          experience earned to analyze overall performance.\r\n        </p>\r\n        <p>Developed using React and Node.JS.</p>\r\n      </>\r\n    );\r\n    let desc2 = (\r\n      <>\r\n        <p>\r\n          Application developed to monitor latency to League of Legends servers\r\n          outside of game, so that players can check if their internet\r\n          connection is stable and won't impair their ingame performance.\r\n        </p>\r\n        <p>\r\n          Uses built in TCP/IP ping command in operating system to connect to\r\n          the server IP address to check connection quality.\r\n        </p>\r\n        <p>Developed using Python and Tkinter.</p>\r\n      </>\r\n    );\r\n    return (\r\n      <div className=\"Portfolio\">\r\n        <h2>Portfolio</h2>\r\n        <ProjectCard\r\n          imgsrc={LOLStatsPicture}\r\n          title=\"League of Legends Stats App\"\r\n          description={desc1}\r\n          projLink=\"https://lol-stats-analysis.herokuapp.com/\"\r\n        />\r\n        <ProjectCard\r\n          imgsrc={PingDemoPicture}\r\n          title=\"League of Legends Ping Checker\"\r\n          description={desc2}\r\n          projLink=\"https://github.com/EdmundLai/League-of-Legends-Ping-App/\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Link, Switch, Route } from \"react-router-dom\";\r\nimport Bio from \"./components/Bio/Bio\";\r\nimport Portfolio from \"./components/Portfolio/Portfolio\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>Edmund Lai</h1>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/portfolio\">Portfolio</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <div className=\"App-body\">\r\n          <Switch>\r\n            <Route path=\"/portfolio\">\r\n              <Portfolio />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Bio />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n\r\n        <div className=\"App-footer\">&#x24B8; 2020 Edmund Lai</div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}